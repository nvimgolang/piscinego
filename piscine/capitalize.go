package piscine

// Capitalize принимает строку и возвращает новую строку,
// где первая буква каждого слова заглавная, а остальные - строчные
func Capitalize(s string) string {
	// Преобразуем строку в слайс рун для корректной работы с UTF-8
	// Это важно для обработки символов, которые могут занимать больше 1 байта
	runes := []rune(s)

	// Флаг, указывающий, что следующий символ должен быть заглавным
	// Изначально true, так как первый символ слова должен быть заглавным
	nextShouldBeUpper := true

	// Проходим по каждому символу в строке
	for i, r := range runes {
		// Проверяем, является ли текущий символ буквенно-цифровым
		if isAlphaNumeric(r) {
			// Если символ алфавитно-цифровой, то мы внутри слова
			if nextShouldBeUpper {
				// Если это первый символ слова, делаем его заглавным
				runes[i] = toUpper(r)
				// Следующие символы в этом слове должны быть строчными
				nextShouldBeUpper = false
			} else {
				// Если это не первый символ слова, делаем его строчным
				runes[i] = toLower(r)
			}
		} else {
			// Если символ не алфавитно-цифровой, значит мы находимся между словами
			// Следующий алфавитно-цифровой символ будет началом нового слова
			nextShouldBeUpper = true
		}
	}

	// Преобразуем слайс рун обратно в строку и возвращаем результат
	return string(runes)
}

// isAlphaNumeric проверяет, является ли символ буквенно-цифровым
// Возвращает true для букв (a-z, A-Z) и цифр (0-9)
func isAlphaNumeric(r rune) bool {
	return (r >= 'a' && r < = 'z') || (r >= 'A' && r <= 'Z') ||
		(r >= '0' && r <= '9')
}

// toUpper преобразует строчную букву в заглавную
// Если символ не является строчной буквой, возвращает его без изменений
func toUpper(r rune) rune {
	if r >= 'a' && r <= 'z' {
		// Вычисляем разность между строчными и заглавными буквами в ASCII
		// 'A' = 65, 'a' = 97, разность = 32
		return r - ('a' - 'A')
	}
	return r
}

// toLower преобразует заглавную букву в строчную
// Если символ не является заглавной буквой, возвращает его без изменений
func toLower(r rune) rune {
	if r >= 'A' && r <= 'Z' {
		// Прибавляем разность между строчными и заглавными буквами
		return r + ('a' - 'A')
	}
	return r
}
